/** Declaration file generated by dts-gen */

export class EditableTreeNode {
    constructor(...args: any[]);

    addAlias(...args: any[]): void;

    addToMeta(...args: any[]): void;

    delete(...args: any[]): void;

    insert(...args: any[]): void;

    traverseBFS(...args: any[]): void;

    traverseDFS(...args: any[]): void;

}

export const VueRouterAutoImports: {
    "unplugin-vue-router/runtime": any[];
    "vue-router": string[];
};

export function AutoExportLoaders({
  filterPageComponents: filterPagesOrGlobs,
  loadersPathsGlobs,
  root = process.cwd()
}: any): any;

export function createRoutesContext(options: any): any;

export function createTreeNodeValue(segment: any, parent: any, options: any): any;

export function getFileBasedRouteName(node: any): any;

export function getPascalCaseRouteName(node: any): any;

export namespace DEFAULT_OPTIONS {
    const dts: boolean;

    const exclude: any[];

    const experimental: {
    };

    const extensions: string[];

    const filePatterns: string[];

    const importMode: string;

    const logs: boolean;

    const pathParser: {
        dotNesting: boolean;
    };

    const root: string;

    const routeBlockLang: string;

    const routesFolder: string;

    const watch: boolean;

    function getRouteName(node: any): any;

}

